<#assign classNameLower = className?uncap_first>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro namespace>${className}.</#macro>

<!-- 使用接口地址作为namespace-->
<mapper namespace="${packageName}.dao.${className}Dao">

	<resultMap id="RM.${className}" type="${packageName}.model.${className}Model">
        <#list table.columns as column>
        <result property="${column.classColumnName}" column="${column.sqlColumnName}"/>
		</#list>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="<@namespace/>columns">
	    <![CDATA[
			<#list table.columns as column>
				${column.sqlColumnName}<#if column_has_next>,</#if>
			</#list>
	    ]]>
	</sql>

	<insert id="<@namespace/>insert">
		<selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">
			SELECT uuid() AS ID 
	    </selectKey>
	    <![CDATA[
	        INSERT INTO ${tableName} (
	        <#list table.columns as column>
	        	${column.sqlColumnName} <#if column_has_next>,</#if>
	        </#list>
	        ) VALUES (
	        <#list table.columns as column>
	        	<@mapperEl column.classColumnName/> <#if column_has_next>,</#if>
	        </#list>        
	        )
	    ]]>
	</insert>
    
	<update id="<@namespace/>update" >
    <![CDATA[
        UPDATE ${tableName} SET
	        <#list table.notKeyColumns as column>
	        	${column.sqlColumnName} = <@mapperEl column.classColumnName/> <#if column_has_next>,</#if>
	        </#list>
        WHERE 
        	<#list table.keyColumns as column>
	        	${column.sqlColumnName} = <@mapperEl column.classColumnName/> <#if column_has_next> AND </#if>
	        </#list>	        
    ]]>
	</update>

    <delete id="<@namespace/>delete">
    <![CDATA[
        DELETE FROM ${tableName} WHERE
        <#list table.keyColumns as column>
        	${column.sqlColumnName} = <@mapperEl column.classColumnName/> <#if column_has_next> AND </#if>
		</#list>
    ]]>
    </delete>
    
    <select id="<@namespace/>getById" resultMap="RM.${className}">
		SELECT <include refid="<@namespace/>columns" />
	    <![CDATA[
		    FROM ${tableName} 
	        WHERE 
				<#list table.keyColumns as column>
		        	${column.sqlColumnName} = <@mapperEl column.classColumnName/> <#if column_has_next> AND </#if>
				</#list>   
	    ]]>
	</select>
	
	<sql id="<@namespace/>findPage.where">
		<where>	      				
	       <#list table.columns as column>
		       <#if column.isDateTimeColumn>
			       <if test="${column.classColumnName}Begin!=null">
						AND ${column.sqlColumnName} >= <@mapperEl column.classColumnName+"Begin"/>
				   </if>
				   <if test="${column.classColumnName}End!=null">
						AND ${column.sqlColumnName} &lt;= <@mapperEl column.classColumnName+"End"/>
				   </if>
		       <#else>
			     	<if test="${column.classColumnName}!=null">
						AND ${column.sqlColumnName} = <@mapperEl column.classColumnName/>
					</if>
		       </#if>
	       </#list>			
		</where>
	</sql>
		
    <select id="<@namespace/>findPage.count" resultType="long">
        SELECT count(*) FROM ${tableName} 
		<include refid="<@namespace/>findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="<@namespace/>findPage" resultMap="RM.${className}">
    	SELECT <include refid="<@namespace/>columns" />
	    FROM ${tableName} 
		<include refid="<@namespace/>findPage.where"/>
    </select>

</mapper>